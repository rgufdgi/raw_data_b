raw_data
Программа сортирует сырой файл по gir и в большинстве случаев по rf. Создаются 
соответствующие csv-файлы с помощью pandas. Таблицы pandas очень медленно работают
в циклах, поэтому создаются в уже конце, для проверки правильности работы программы
и для, собственно, записи данных в новые файлы.

При чтении данных значения (состоящие из какого-то своего числа байтов) идут в 
правильной последовательности, байты внутри них -- в обратной. Для преобразования
ко всем значениям длиной больше байта применяется функция rverse. Функции u124, 
i124 и floatt преобразуют последовательности байтов в соответствующие числа. Они
в свою очередь пользуются функцией hex_to_binary, которая переводит считанное
шестнадцатиричное число в двоичное, добавляя нужное число нулей в начало (чтобы не 
было проблем с, например, знаковыми типами данных).

name -- название файла. (i****_0Y.**** буква -- год (i -- 2019, n -- 2024), номер
рана, Y -- номер кластера, номер файла в ране). При чтении файла заполняются списки 
общей структуры, потом основной цикл проходится по их длине, заполняя словари для
данных с разными gir и rf. Для мастерных данных (gir 6) написаны свои функции, 
возвращающие словари, аналогичные основным словарям, которые добавляются в них 
в основном цикле. Опреции для других записей выполняются прямо в цикле.

Список дел/проблем/неочевидных(мне)особенностей:
* local_time выглядит очень странно
* куски кода, сортирующие всё, кроме мастерных записей, не проверялись на деле
(в моих файлах не было таких записей), скорее всего, там много ошибок и опечаток
* часть записей, не относящихся к мастерным (не gir 6) не переводит / 
переводит не до конца последовательности байтов в значения. В особенности:
* Скорее всего, будет много проблем в конфигурации детектора из-за разных версий.
Сейчас код отделят друг от друга адресную, статическую и динамическую конфигурации,
но они остаются в виде строк с последовательностью байтов.
*

raw_06
тут начало программы по обработке получившихся временных кадров


